#!/usr/bin/env node

/**
 * dependencies
 */

var cdnex = require('../lib')
var program = require('commander')
var updateNotifier = require('update-notifier')
var chalk = require('chalk')
var pkg = require('../package.json')

/**
 * setup cli
 */

updateNotifier({ pkg: pkg }).notify()

program
  .version(pkg.version)
  .usage('cdnex <file or directory> [options]')
  .option('-c, --cdn <url>', 'cdn url to use')
  .option('-o, --output <location>', 'location of output file or folder')
  .option('-e, --extensions <exts>', 'comma-seperated list of added extensions')
  .option('-x, --only-extensions <exts>', 'comma-seperated list of default extensions')
  .option('-p, --pattern <ptrn>', 'glob pattern to match when searching a directory')
  .option('-i, --ignore <regex>', 'regex pattern of urls to ignore')
  .option('-q, --quiet', 'dont output anything except errors')
  .option('-f, --force', 'force output to overwrite')
  .option('-v, --validate <true/false>', 'validate cdn url')

/**
 * output help
 */

program.on('--help', function(){
  console.log('  Examples:')
  console.log('')
  console.log('    $ cdnex src -o dist -c https://my-cdn.com')
  console.log('    $ cdnex src/about.html -c https://my-cdn.com')
  console.log('    $ cdnex src -p "**/*.html" -c https://my-cdn.com')
  console.log('    $ cdnex src -e "pdf,doc" -c https://my-cdn.com')
  console.log('')
})

if (!process.argv.slice(2).length) {
  return program.outputHelp()
}

/**
 * run
 */

program.parse(process.argv)

cdnex.render(program)
  .then(function(rendered) {
    if (rendered) console.log(rendered)
  })
  .catch(function(err) {
    console.log(chalk.red(err))
  })
